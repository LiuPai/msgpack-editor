// Code generated by "stringer -type=MsgPackFormat"; DO NOT EDIT

package msgpack

import "fmt"

const (
	_MsgPackFormat_name_0 = "PostiveFixIntMask"
	_MsgPackFormat_name_1 = "FixStrMask"
	_MsgPackFormat_name_2 = "NegativeFixIntMaskFixMapMaskFixArrayMask"
	_MsgPackFormat_name_3 = "NilNeverUsedFalseTrueBin8Bin16Bin32Ext8Ext16Ext32Float32Float64UInt8UInt16UInt32UInt64Int8Int16Int32Int64FixExt1FixExt2FixExt4FixExt8FixExt16Str8Str16Str32Array16Array32Map16Map32End"
	_MsgPackFormat_name_4 = "NotExist"
)

var (
	_MsgPackFormat_index_0 = [...]uint8{0, 17}
	_MsgPackFormat_index_1 = [...]uint8{0, 10}
	_MsgPackFormat_index_2 = [...]uint8{0, 18, 28, 40}
	_MsgPackFormat_index_3 = [...]uint8{0, 3, 12, 17, 21, 25, 30, 35, 39, 44, 49, 56, 63, 68, 74, 80, 86, 90, 95, 100, 105, 112, 119, 126, 133, 141, 145, 150, 155, 162, 169, 174, 179, 182}
	_MsgPackFormat_index_4 = [...]uint8{0, 8}
)

func (i Format) String() string {
	switch {
	case i == 0:
		return _MsgPackFormat_name_0
	case i == 5:
		return _MsgPackFormat_name_1
	case 7 <= i && i <= 9:
		i -= 7
		return _MsgPackFormat_name_2[_MsgPackFormat_index_2[i]:_MsgPackFormat_index_2[i+1]]
	case 192 <= i && i <= 224:
		i -= 192
		return _MsgPackFormat_name_3[_MsgPackFormat_index_3[i]:_MsgPackFormat_index_3[i+1]]
	case i == 255:
		return _MsgPackFormat_name_4
	default:
		return fmt.Sprintf("MsgPackFormat(%d)", i)
	}
}
